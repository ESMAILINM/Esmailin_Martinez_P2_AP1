@page "/Modelo"
@using Esmailin_Martinez_P2_AP1.Models
@rendermode InteractiveServer
@inject NavigationManager navigationManager

<PageTitle>Create Modelo</PageTitle>

<EditForm Model="modelo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Modelo</h5>
            </div>
            <div class="card-body">

                <div class="mb-3 row">
                    @* Asignatura *@
                    <div class="mb-3 col-5">
                        <label class="form-label"><strong>Asignatura</strong></label>
                        <InputText class="form-control" @bind-Value="encuesta.Asignatura" />
                    </div>
                    @* Fecha *@
                    <div class="mb-3 col-3">
                        <label class="form-label"><strong>Fecha</strong></label>
                        <InputDate @bind-Value="date" class="form-control"></InputDate>
                    </div>
                </div>

                @* Detalles de las Ciudades y Montos *@
                <div class="border border-success p-3 mt-3">
                    <h5>Detalle de Ciudades y Montos</h5>
                    <table class="table table-light">
                        <thead class="table table-striped">
                        </thead>
                        <tbody>
                            @foreach (var ciudad in detalleCiudades)
                            {
                                <tr>
                                    <td>@ciudad.Nombre</td>
                                    <td>@ciudad.Monto</td>
                                    <td>
                                        <button type="button" class="btn btn-danger" @onclick="() => EliminarCiudad(ciudad)">Eliminar</button>
                                    </td>
                                </tr>
                            }
                            @* Fila para ingresar nueva ciudad y monto *@
                            <tr>
                                <td>
                                    <select @bind="selectedCiudadId" class="form-control">
                                        <option value="">Seleccione una ciudad</option>
                                        @foreach (var ciudad in ciudadesList)
                                        {
                                            <option value="@ciudad.CiudadId">@ciudad.Nombre</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <InputNumber @bind-Value="monto" class="form-control" placeholder="Monto" />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-primary" @onclick="AgregarCiudad">Agregar</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="text-end">
                        <strong>Total:</strong> @TotalMonto.ToString("C")
                    </div>
                </div>
            </div>

            <div class="card-footer text-center mt-2">
                <button type="submit" class=" btn btn-outline-success"><i class=" bi bi-check-circle-fill"></i> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Encuesta encuesta { get; set; } = new Encuesta();
    public List<Ciudades> ciudadesList { get; set; } = new List<Ciudades>();
    public List<Ciudades> detalleCiudades { get; set; } = new List<Ciudades>();
    public int selectedCiudadId { get; set; }
    public double monto { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        ciudadesList.AddRange(new List<Ciudades>
        {
            new Ciudades { CiudadId = 1, Nombre = "Santo Domingo", Monto = 0 },
            new Ciudades { CiudadId = 2, Nombre = "Punta Cana", Monto = 0 },
            new Ciudades { CiudadId = 3, Nombre = "La Romana", Monto = 0 }
        });
    }

    private void AgregarCiudad()
    {
        if (selectedCiudadId != 0 && monto > 0)
        {
            var ciudadSeleccionada = ciudadesList.FirstOrDefault(c => c.CiudadId == selectedCiudadId);
            if (ciudadSeleccionada != null)
            {
                var ciudadExistente = detalleCiudades.FirstOrDefault(c => c.CiudadId == selectedCiudadId);

                if (ciudadExistente != null)
                {
                    ciudadExistente.Monto += monto;
                }
                else
                {
                    detalleCiudades.Add(new Ciudades
                        {
                            CiudadId = ciudadSeleccionada.CiudadId,
                            Nombre = ciudadSeleccionada.Nombre,
                            Monto = monto
                        });
                }
                selectedCiudadId = 0;
                monto = 0;
            }
        }
    }

    private void EliminarCiudad(Ciudades ciudad)
    {
        detalleCiudades.Remove(ciudad);
    }

    private async Task Guardar()
    {
        await encuestaService.Guardar(encuesta);
    }
}
